{"ast":null,"code":"import _objectSpread from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jon/Desktop/Projects/Noteful_JG/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jon/Desktop/Projects/Noteful_JG/src/AddFolder/AddFolder.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport ApiContext from '../ApiContext';\nimport config from '../config';\nimport PropTypes from 'prop-types';\nimport ValidationError from '../ValidationError';\n\nvar AddFolder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddFolder, _Component);\n\n  function AddFolder(props) {\n    var _this;\n\n    _classCallCheck(this, AddFolder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddFolder).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n      var folder = {\n        name: e.target['folder-name'].value\n      };\n      fetch(\"\".concat(config.API_ENDPOINT, \"/folders\"), {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(folder)\n      }).then(function (res) {\n        if (!res.ok) return res.json().then(function (e) {\n          return Promise.reject(e);\n        });\n        return res.json();\n      }).then(function (folder) {\n        _this.context.addFolder(folder);\n\n        _this.props.history.push(\"/folder/\".concat(folder.id));\n      }).catch(function (error) {\n        console.error({\n          error: error\n        });\n      });\n    };\n\n    _this.state = {\n      folderName: '',\n      folderNameValid: false,\n      formValid: false,\n      validationMessages: {\n        folderName: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddFolder, [{\n    key: \"updateFolderName\",\n    value: function updateFolderName(folderName) {\n      var _this2 = this;\n\n      this.setState({\n        folderName: folderName\n      }, function () {\n        _this2.validateFolderName(folderName);\n      });\n    }\n  }, {\n    key: \"validateFolderName\",\n    value: function validateFolderName(fieldValue) {\n      var fieldErrors = _objectSpread({}, this.state.validationMessages);\n\n      var hasError = false;\n      fieldValue = fieldValue.trim();\n\n      if (fieldValue.length === 0) {\n        fieldErrors.noteTitle = 'Please type a folder name';\n        hasError = true;\n      }\n\n      this.setState({\n        validationMessages: fieldErrors,\n        folderNameValid: !hasError\n      }, this.formValid);\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid() {\n      this.setState({\n        formValid: this.state.folderNameValid\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"section\", {\n        className: \"AddFolder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Create a folder\"), React.createElement(NotefulForm, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"folder-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"folder-name-input\",\n        name: \"folder-name\",\n        onChange: function onChange(e) {\n          return _this3.updateFolderName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(ValidationError, {\n        hasError: !this.state.noteNameValid,\n        message: this.state.validationMessages.noteTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        disabled: !this.state.formValid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Add folder\"))));\n    }\n  }]);\n\n  return AddFolder;\n}(Component);\n\nAddFolder.defaultProps = {\n  history: {\n    push: function push() {}\n  }\n};\nAddFolder.contextType = ApiContext;\nexport { AddFolder as default };\nAddFolder.propTypes = {\n  handleSubmit: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n};","map":{"version":3,"sources":["/Users/jon/Desktop/Projects/Noteful_JG/src/AddFolder/AddFolder.js"],"names":["React","Component","NotefulForm","ApiContext","config","PropTypes","ValidationError","AddFolder","props","handleSubmit","e","preventDefault","folder","name","target","value","fetch","API_ENDPOINT","method","headers","body","JSON","stringify","then","res","ok","json","Promise","reject","context","addFolder","history","push","id","catch","error","console","state","folderName","folderNameValid","formValid","validationMessages","setState","validateFolderName","fieldValue","fieldErrors","hasError","trim","length","noteTitle","updateFolderName","noteNameValid","defaultProps","contextType","propTypes","func","shape"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport NotefulForm from '../NotefulForm/NotefulForm'\nimport ApiContext from '../ApiContext'\nimport config from '../config'\nimport PropTypes from 'prop-types';\nimport ValidationError from '../ValidationError'\n\n\nexport default class AddFolder extends Component {\n  static defaultProps = {\n    history: {\n      push: () => { }\n    },\n  }\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      folderName: '',\n      folderNameValid: false,\n      formValid: false,\n      validationMessages: {\n        folderName: ''\n      }\n    }\n  }  \n\n  updateFolderName(folderName) {\n    this.setState({folderName}, () => {this.validateFolderName(folderName)});\n  }\n\n  validateFolderName(fieldValue) {\n    const fieldErrors = {...this.state.validationMessages};\n    let hasError = false;\n\n    fieldValue = fieldValue.trim();\n    if(fieldValue.length === 0) {\n      fieldErrors.noteTitle = 'Please type a folder name';\n      hasError = true;\n    }\n\n    this.setState({\n      validationMessages: fieldErrors,\n      folderNameValid: !hasError\n    }, this.formValid );\n    }\n\n    formValid() {\n        this.setState({\n        formValid: this.state.folderNameValid\n        });\n    }\n  \n  \n  static contextType = ApiContext;\n\n  handleSubmit = e => {\n    e.preventDefault()\n    const folder = {\n      name: e.target['folder-name'].value\n    }\n    fetch(`${config.API_ENDPOINT}/folders`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(folder),\n    })\n      .then(res => {\n        if (!res.ok)\n          return res.json().then(e => Promise.reject(e))\n        return res.json()\n      })\n      .then(folder => {\n        this.context.addFolder(folder)\n        this.props.history.push(`/folder/${folder.id}`)\n      })\n      .catch(error => {\n        console.error({ error })\n      })\n  }\n\n    render() {\n        return (\n        <section className='AddFolder'>\n            <h2>Create a folder</h2>\n            <NotefulForm onSubmit={this.handleSubmit}>\n            <div className='field'>\n                <label htmlFor='folder-name-input'>\n                Name\n                </label>\n                <input type='text' id='folder-name-input' name='folder-name' onChange={e => this.updateFolderName(e.target.value)}/>\n                <ValidationError hasError={!this.state.noteNameValid} message={this.state.validationMessages.noteTitle}/>\n            </div>\n            <div className='buttons'>\n                <button type='submit' disabled={!this.state.formValid}>\n                Add folder\n                </button>\n            </div>\n            </NotefulForm>\n        </section>\n        )\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAddFolder.propTypes = {\n    handleSubmit: PropTypes.func,\n    history: PropTypes.shape({\n      push: PropTypes.func,\n    })\n};\n  "]},"metadata":{},"sourceType":"module"}